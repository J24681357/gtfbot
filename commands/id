var stats = require("../functions/profile/f_stats");
var emote = require("../index");
var gtftools = require("../functions/misc/f_tools");

const Discord = require("discord.js");
const client = new Discord.Client();
var gtf = require('../files/directories');
////////////////////////////////////////////////////

module.exports = {
  name: "id",
  title: "GT Fitness: ID Database",
  cooldown: 3,
  level: 0,
  channels: ["gtf-demo", "testing"],

  delete: false,
  availitoeveryone:true,
  availinmaint:false,
  requirecar: false,
  usedduringrace: true,
  usedinlobby: true,
  description: ["!id [track] [(number)] - Shows information about a track from the [(number)] associated with all used GTF tracks from alphabetical order.\nNo number returns a random track."],
  execute(msg, query, userdata) {
    /* Setup */
    const embed = new Discord.MessageEmbed();
    embed.setColor(0x0151b0);

    var user = msg.guild.members.cache.get(userdata["id"]).user.username
    embed.setAuthor(user, msg.guild.members.cache.get(userdata["id"]).user.displayAvatarURL());
    var args = "\n" + "`Args: !id [car|track] [(number)|\"query\"]`" + "\n"
    var page = 0
    var results = ''
    var info = ''
    //      //      //      //      //      //      //      //      //      //      //      //      //      //      //      //      //

    var selected = false;
    var reactionson = true;

    if (query[0] == "tracks") {
      var selected = true
      var tracks = require(gtf.TRACKS).list("names")
      embed.setTitle("__**Track ID Database**__")
            var list = tracks.map(x => [x, " "])
             results2 = gtftools.list(list, page, "", "", true, "", 15, [query, "lobby"], embed, msg, userdata)
      
             embed.setDescription(results2)
             info = "**❓ These are the track IDs you can use for commands that has any track arguments.**" 
            gtftools.createpages(results2, list, page, "", "", true, "", 15, [query, "id", reactionson, info], embed, msg, userdata)
            return
    }
    if (query[0] == "car") {
  
    }
    if (selected) {
      embed.setDescription(results);
      msg.channel.send(embed);
      return 
    } else {
      require(gtf.EMBED).alert({name:"❌ Error", description:  "Invalid arguments.", embed:"", seconds:0}, msg, userdata);
      return
    }
  }
};
